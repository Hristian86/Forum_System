@model ForumSys.Web.ViewModels.OutPutViewModels.Posts.PostViewModel
@{
    ViewData["Title"] = Model.Title;
}

<h1>@ViewData["Title"]</h1>

@* To Do some form for posts *@

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.1.0/css/font-awesome.min.css" />

<div class="media">
    @*<img class="mr-3" src="..." alt="Generic placeholder image">*@
    <div class="media-body">
        <h5 class="mt-0"></h5>
        @Html.Raw(Model.SanitazeContent)
        <hr />
        <div class="row">
            <div class="col-6">
                <i class="fa fa-calendar" aria-hidden="true"></i>@Model.CreatedOn
            </div>

            <div class="col-6 text-right">
                <i class="fa fa-user"></i>@Model.UserUserName
            </div>
        </div>
        <hr />
        <div>
            <div class="d-flex justify-content-between">
                <h3>Comments</h3>
                <form id="votesForm" method="post">
                    <input type="hidden" />
                </form>
                @{
                    var upVote = "text-primary";
                    var downVote = "text-primary";

                    var dispaly = Model.VotesCount == 1 ?
                        upVote = "text-warning" :
                        Model.VotesCount == 0 ? downVote = "text-primary" : downVote = "text-warning";
                }
                <div class="d-flex justify-content-end vote-container">
                    <span class="mr-3 text-danger" id="errorField"></span>
                    <div class="mr-3">
                        <i data-toggle="tooltip"
                           data-placement="bottom"
                           title="Like"
                           onclick="upVote(@Model.Id)"
                           id="upVoteIcont"
                           class="fa fa-thumbs-up @upVote hover-button-type"></i>
                    </div>
                    <div id="votesCount" class="mr-4 text-right">
                        @Model.VotesCount
                    </div>
                    <div class="">
                        <i data-toggle="tooltip"
                           data-placement="bottom"
                           title="Un like"
                           id="downVoteIcont"
                           onclick="downVote(@Model.Id)"
                           class="fa fa-thumbs-down @downVote hover-button-type"></i>
                    </div>

                </div>
            </div>

        </div>
        <hr />
        <div class="media pl-sm-5 ml-sm-5 mt-3">
            <a class="pr-3" href="#">
                @*<img src="..." alt="Generic placeholder image">*@
            </a>
            <div class="media-body">
                <h5 class="mt-0">Media heading</h5>
                Cras sit amet nibh libero, in gravida nulla. Nulla vel metus scelerisque ante sollicitudin. Cras purus odio, vestibulum in vulputate at, tempus viverra turpis. Fusce condimentum nunc ac nisi vulputate fringilla. Donec lacinia congue felis in faucibus.
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const error = document.getElementById('errorField');
        const upVote = async (postId) => {
            var json = {
                postId: postId,
                isUpVote: true
            };

            var token = $("#votesForm input[name=__RequestVerificationToken]").val();

            $.ajax({
                url: "/api/votes",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    $("#votesCount").html(data.votesCount);

                    let up = document.getElementById("upVoteIcont");
                    up.setAttribute("class", "fa fa-thumbs-up text-warning hover-button-type");

                    let down = document.getElementById("downVoteIcont");

                    down.setAttribute("class", "fa fa-thumbs-down text-primary hover-button-type");
                    error.innerHTML = "";
                },
                error: function (err) {
                    error.innerHTML = "Must be logged";
                }
            })

        }
        const downVote = (postId) => {
            var json = {
                postId: postId,
                isUpVote: false
            };

            var token = $("#votesForm input[name=__RequestVerificationToken]").val();

            $.ajax({
                url: "/api/votes",
                type: "POST",
                data: JSON.stringify(json),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                headers: { 'X-CSRF-TOKEN': token },
                success: function (data) {
                    //    $("#votesCount").html("0");
                    //} else {
                    $("#votesCount").html(data.votesCount);

                    document.getElementById("upVoteIcont").setAttribute("class", "fa fa-thumbs-up text-primary hover-button-type");

                    document.getElementById("downVoteIcont").setAttribute("class", "fa fa-thumbs-down text-warning hover-button-type");
                    error.innerHTML = "";
                },
                error: function (err) {
                    error.innerHTML = "Must be logged";
                }
            })
        }

    </script>

}